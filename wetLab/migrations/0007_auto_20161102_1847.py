# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-11-02 18:47
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('organization', '0014_auto_20161102_1847'),
        ('wetLab', '0006_auto_20161031_2148'),
    ]

    operations = [
        migrations.CreateModel(
            name='Construct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(blank=True, help_text='An external resource with additional information about the object', null=True)),
                ('dbxrefs', models.CharField(blank=True, help_text='Unique identifiers from external resources.', max_length=100, null=True)),
                ('construct_name', models.CharField(default='', help_text='Short name for construct - letters, numbers, hyphens or underscores allowed (no spaces)', max_length=50)),
                ('construct_description', models.CharField(blank=True, help_text='A plain text description of the construct.', max_length=200, null=True)),
                ('construct_designed_to_target', models.CharField(blank=True, help_text='The gene or genomic region that this construct is designed to target', max_length=200, null=True)),
                ('construct_insert_sequence', models.CharField(blank=True, help_text='Nucleotide Sequence of the Insert', max_length=200, null=True)),
                ('construct_tag', models.CharField(blank=True, help_text='String describing tags the construct contains.', max_length=200, null=True)),
                ('construct_vector_backbone', models.CharField(blank=True, help_text='The vector backbone for this construct', max_length=200, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GenomicRegions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genomicRegions_start_coordinate', models.IntegerField(blank=True, help_text='The base position of the start coordinate of the region - start < end', null=True)),
                ('genomicRegions_end_coordinate', models.IntegerField(blank=True, help_text='The base position of the end coordinate - end > start', null=True)),
                ('genomicRegions_location_description', models.CharField(blank=True, help_text='If exact coordinates of the region are not available a description of the genome location', max_length=200, null=True)),
                ('genomicRegions_start_location', models.CharField(blank=True, help_text='If the exact start coordinate is not know a description of the start location', max_length=200, null=True)),
                ('genomicRegions_end_location', models.CharField(blank=True, help_text='If the exact end coordinate is not know a description of the start location', max_length=200, null=True)),
                ('genomicRegions_chromosome', models.ForeignKey(blank=True, help_text='The chromosome containing the region', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='chrChoice', to='organization.Choice')),
                ('genomicRegions_genome_assembly', models.ForeignKey(help_text='The genome assembly from which the region was derived', on_delete=django.db.models.deletion.CASCADE, related_name='genAssChoice', to='organization.Choice')),
            ],
        ),
        migrations.CreateModel(
            name='Target',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(blank=True, help_text='An external resource with additional information about the object', null=True)),
                ('dbxrefs', models.CharField(blank=True, help_text='Unique identifiers from external resources.', max_length=100, null=True)),
                ('target_genes', models.CharField(default='', help_text='The genes that are specifically targeted - can also be derived from genomic region info', max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.RemoveField(
            model_name='biosample',
            name='biosample_dbxrefs',
        ),
        migrations.RemoveField(
            model_name='biosample',
            name='biosample_references',
        ),
        migrations.RemoveField(
            model_name='biosource',
            name='biosource_url',
        ),
        migrations.RemoveField(
            model_name='individual',
            name='individual_dbxrefs',
        ),
        migrations.RemoveField(
            model_name='individual',
            name='individual_documents',
        ),
        migrations.RemoveField(
            model_name='individual',
            name='individual_url',
        ),
        migrations.RemoveField(
            model_name='modification',
            name='modification_fields',
        ),
        migrations.AddField(
            model_name='biosample',
            name='dbxrefs',
            field=models.CharField(blank=True, help_text='Unique identifiers from external resources.', max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='biosample',
            name='documents',
            field=models.ForeignKey(blank=True, help_text='Documents that provide additional information (not data file).', null=True, on_delete=django.db.models.deletion.CASCADE, to='wetLab.Document'),
        ),
        migrations.AddField(
            model_name='biosample',
            name='references',
            field=models.ForeignKey(blank=True, help_text='The publications that provide more information about the object.', null=True, on_delete=django.db.models.deletion.CASCADE, to='organization.Publication'),
        ),
        migrations.AddField(
            model_name='biosample',
            name='url',
            field=models.URLField(blank=True, help_text='An external resource with additional information about the object', null=True),
        ),
        migrations.AddField(
            model_name='biosource',
            name='biosource_SOP_cell_line',
            field=models.ForeignKey(default=1, help_text='Standard operation protocol for the cell line as determined by 4DN Cells Working Group', on_delete=django.db.models.deletion.CASCADE, related_name='bioProtocol', to='wetLab.Protocol'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='biosource',
            name='biosource_cell_line',
            field=models.CharField(blank=True, help_text='Ontology term for the cell line used.', max_length=200, null=True),
        ),
        migrations.AddField(
            model_name='biosource',
            name='biosource_cell_line_tier',
            field=models.ForeignKey(default=1, help_text='Tier into which the cell line has been classified', on_delete=django.db.models.deletion.CASCADE, related_name='bioCellChoice', to='organization.Choice'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='biosource',
            name='dbxrefs',
            field=models.CharField(blank=True, help_text='Unique identifiers from external resources.', max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='biosource',
            name='documents',
            field=models.ForeignKey(blank=True, help_text='Documents that provide additional information (not data file).', null=True, on_delete=django.db.models.deletion.CASCADE, to='wetLab.Document'),
        ),
        migrations.AddField(
            model_name='biosource',
            name='references',
            field=models.ForeignKey(blank=True, help_text='The publications that provide more information about the object.', null=True, on_delete=django.db.models.deletion.CASCADE, to='organization.Publication'),
        ),
        migrations.AddField(
            model_name='biosource',
            name='url',
            field=models.URLField(blank=True, help_text='An external resource with additional information about the object', null=True),
        ),
        migrations.AddField(
            model_name='document',
            name='document_references',
            field=models.ForeignKey(blank=True, help_text='The publications that provide more information about the object.', null=True, on_delete=django.db.models.deletion.CASCADE, to='organization.Publication'),
        ),
        migrations.AddField(
            model_name='document',
            name='document_url',
            field=models.URLField(blank=True, help_text='An external resource with additional information about the object', null=True),
        ),
        migrations.AddField(
            model_name='enzyme',
            name='dbxrefs',
            field=models.CharField(blank=True, help_text='Unique identifiers from external resources.', max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='enzyme',
            name='documents',
            field=models.ForeignKey(blank=True, help_text='Documents that provide additional information (not data file).', null=True, on_delete=django.db.models.deletion.CASCADE, to='wetLab.Document'),
        ),
        migrations.AddField(
            model_name='enzyme',
            name='enzyme_catalog_number',
            field=models.CharField(default='', help_text='A plain text for catalog description.', max_length=200),
        ),
        migrations.AddField(
            model_name='enzyme',
            name='enzyme_description',
            field=models.CharField(default='', help_text='A plain text description of the enzyme.', max_length=200),
        ),
        migrations.AddField(
            model_name='enzyme',
            name='references',
            field=models.ForeignKey(blank=True, help_text='The publications that provide more information about the object.', null=True, on_delete=django.db.models.deletion.CASCADE, to='organization.Publication'),
        ),
        migrations.AddField(
            model_name='enzyme',
            name='url',
            field=models.URLField(blank=True, help_text='An external resource with additional information about the object', null=True),
        ),
        migrations.AddField(
            model_name='individual',
            name='dbxrefs',
            field=models.CharField(blank=True, help_text='Unique identifiers from external resources.', max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='individual',
            name='documents',
            field=models.ForeignKey(blank=True, help_text='Documents that provide additional information (not data file).', null=True, on_delete=django.db.models.deletion.CASCADE, to='wetLab.Document'),
        ),
        migrations.AddField(
            model_name='individual',
            name='references',
            field=models.ForeignKey(blank=True, help_text='The publications that provide more information about the object.', null=True, on_delete=django.db.models.deletion.CASCADE, to='organization.Publication'),
        ),
        migrations.AddField(
            model_name='individual',
            name='url',
            field=models.URLField(blank=True, help_text='An external resource with additional information about the object', null=True),
        ),
        migrations.AddField(
            model_name='modification',
            name='dbxrefs',
            field=models.CharField(blank=True, help_text='Unique identifiers from external resources.', max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='modification',
            name='documents',
            field=models.ForeignKey(blank=True, help_text='Documents that provide additional information (not data file).', null=True, on_delete=django.db.models.deletion.CASCADE, to='wetLab.Document'),
        ),
        migrations.AddField(
            model_name='modification',
            name='modification_gRNA',
            field=models.CharField(blank=True, help_text='The guide RNA sequences used in Crispr targetting.', max_length=200, null=True),
        ),
        migrations.AddField(
            model_name='modification',
            name='modification_vendor',
            field=models.ForeignKey(blank=True, help_text='Lab or Company that produced the modfication', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='modVendor', to='wetLab.Vendor'),
        ),
        migrations.AddField(
            model_name='modification',
            name='references',
            field=models.ForeignKey(blank=True, help_text='The publications that provide more information about the object.', null=True, on_delete=django.db.models.deletion.CASCADE, to='organization.Publication'),
        ),
        migrations.AddField(
            model_name='modification',
            name='url',
            field=models.URLField(blank=True, help_text='An external resource with additional information about the object', null=True),
        ),
        migrations.AddField(
            model_name='treatment',
            name='dbxrefs',
            field=models.CharField(blank=True, help_text='Unique identifiers from external resources.', max_length=100, null=True),
        ),
        migrations.AddField(
            model_name='treatment',
            name='documents',
            field=models.ForeignKey(blank=True, help_text='Documents that provide additional information (not data file).', null=True, on_delete=django.db.models.deletion.CASCADE, to='wetLab.Document'),
        ),
        migrations.AddField(
            model_name='treatment',
            name='references',
            field=models.ForeignKey(blank=True, help_text='The publications that provide more information about the object.', null=True, on_delete=django.db.models.deletion.CASCADE, to='organization.Publication'),
        ),
        migrations.AddField(
            model_name='treatment',
            name='url',
            field=models.URLField(blank=True, help_text='An external resource with additional information about the object', null=True),
        ),
        migrations.AlterField(
            model_name='biosample',
            name='biosample_biosource',
            field=models.ForeignKey(help_text='The cell lines or tissue types used in the experiment', on_delete=django.db.models.deletion.CASCADE, related_name='bioSource', to='wetLab.Biosource'),
        ),
        migrations.AlterField(
            model_name='biosample',
            name='biosample_modification',
            field=models.ForeignKey(help_text="Expression or targeting vectors stably transfected to generate Crispr'ed or other genomic modification", on_delete=django.db.models.deletion.CASCADE, related_name='bioMod', to='wetLab.Modification'),
        ),
        migrations.AlterField(
            model_name='biosample',
            name='biosample_protocol',
            field=models.ForeignKey(help_text='Information about biosample preparation protocols.', on_delete=django.db.models.deletion.CASCADE, related_name='bioMod', to='wetLab.Protocol'),
        ),
        migrations.AlterField(
            model_name='biosource',
            name='biosource_description',
            field=models.CharField(blank=True, help_text='A plain text for catalog description.', max_length=200, null=True),
        ),
        migrations.AlterField(
            model_name='biosource',
            name='biosource_individual',
            field=models.ForeignKey(help_text='Information on donor or individual mouse or other organism.', on_delete=django.db.models.deletion.CASCADE, related_name='docChoice', to='wetLab.Individual'),
        ),
        migrations.AlterField(
            model_name='biosource',
            name='biosource_tissue',
            field=models.CharField(blank=True, help_text='Anatomy (UBERON) Ontology term for the tissue used.', max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='biosource',
            name='biosource_type',
            field=models.ForeignKey(help_text='The categorization of the biosource.', on_delete=django.db.models.deletion.CASCADE, related_name='bioChoice', to='organization.Choice'),
        ),
        migrations.AlterField(
            model_name='biosource',
            name='biosource_vendor',
            field=models.ForeignKey(help_text='The Lab or Vendor that provided the biosource.', on_delete=django.db.models.deletion.CASCADE, to='wetLab.Vendor'),
        ),
        migrations.AlterField(
            model_name='document',
            name='document_type',
            field=models.ForeignKey(help_text='The category that best describes the document.', on_delete=django.db.models.deletion.CASCADE, related_name='docChoice', to='organization.Choice'),
        ),
        migrations.AlterField(
            model_name='enzyme',
            name='enzyme_cutPos',
            field=models.IntegerField(blank=True, help_text='The position in the provided recognition sequence at which the enzyme cuts AFTER - relative to base 1 of site.', null=True),
        ),
        migrations.AlterField(
            model_name='enzyme',
            name='enzyme_name',
            field=models.CharField(default='', help_text='The name of the digestion enzyme.', max_length=50),
        ),
        migrations.AlterField(
            model_name='enzyme',
            name='enzyme_recogSeq',
            field=models.CharField(blank=True, help_text='The bases of the enzyme recognition sequence.', max_length=20, null=True),
        ),
        migrations.AlterField(
            model_name='enzyme',
            name='enzyme_siteLen',
            field=models.IntegerField(blank=True, help_text='The length of the enzyme recognition sequence.', null=True),
        ),
        migrations.AlterField(
            model_name='enzyme',
            name='enzyme_vendor',
            field=models.ForeignKey(help_text='The Lab or Vendor that provided the enzyme.', on_delete=django.db.models.deletion.CASCADE, to='wetLab.Vendor'),
        ),
        migrations.AlterField(
            model_name='modification',
            name='modification_description',
            field=models.CharField(default='', help_text='A brief plain text description of the modification.', max_length=200),
        ),
        migrations.AlterField(
            model_name='modification',
            name='modification_type',
            field=models.ForeignKey(help_text='The type of genomic modification.', on_delete=django.db.models.deletion.CASCADE, related_name='modChoice', to='organization.Choice'),
        ),
        migrations.AlterField(
            model_name='vendor',
            name='vendor_description',
            field=models.CharField(default='', help_text='A plain text description of the source.', max_length=100),
        ),
        migrations.AlterField(
            model_name='vendor',
            name='vendor_name',
            field=models.CharField(default='', help_text='The complete name of the originating lab or vendor. ', max_length=100),
        ),
        migrations.AlterField(
            model_name='vendor',
            name='vendor_url',
            field=models.URLField(help_text='An external resource with additional information about the source.'),
        ),
        migrations.AddField(
            model_name='target',
            name='documents',
            field=models.ForeignKey(blank=True, help_text='Documents that provide additional information (not data file).', null=True, on_delete=django.db.models.deletion.CASCADE, to='wetLab.Document'),
        ),
        migrations.AddField(
            model_name='target',
            name='references',
            field=models.ForeignKey(blank=True, help_text='The publications that provide more information about the object.', null=True, on_delete=django.db.models.deletion.CASCADE, to='organization.Publication'),
        ),
        migrations.AddField(
            model_name='target',
            name='target_region',
            field=models.ForeignKey(blank=True, help_text='The genome assembly, chromosome and coordinates of the region that is targeted', null=True, on_delete=django.db.models.deletion.CASCADE, to='wetLab.GenomicRegions'),
        ),
        migrations.AddField(
            model_name='construct',
            name='construct_map',
            field=models.ForeignKey(blank=True, help_text='Map of the construct - document', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='conDoc', to='wetLab.Document'),
        ),
        migrations.AddField(
            model_name='construct',
            name='construct_type',
            field=models.ForeignKey(help_text='The categorization of the construct.', on_delete=django.db.models.deletion.CASCADE, related_name='conChoice', to='organization.Choice'),
        ),
        migrations.AddField(
            model_name='construct',
            name='construct_vendor',
            field=models.ForeignKey(blank=True, help_text='The Lab or Vendor that provided the construct.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='conVendor', to='wetLab.Vendor'),
        ),
        migrations.AddField(
            model_name='construct',
            name='documents',
            field=models.ForeignKey(blank=True, help_text='Documents that provide additional information (not data file).', null=True, on_delete=django.db.models.deletion.CASCADE, to='wetLab.Document'),
        ),
        migrations.AddField(
            model_name='construct',
            name='references',
            field=models.ForeignKey(blank=True, help_text='The publications that provide more information about the object.', null=True, on_delete=django.db.models.deletion.CASCADE, to='organization.Publication'),
        ),
        migrations.AddField(
            model_name='modification',
            name='modification_constructs',
            field=models.ForeignKey(default=1, help_text='Recombinant constructs used to make modification.', on_delete=django.db.models.deletion.CASCADE, related_name='modConstructs', to='wetLab.Construct'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='modification',
            name='modification_genomicRegions',
            field=models.ForeignKey(blank=True, help_text='The genomic regions being modified.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='modGen', to='wetLab.GenomicRegions'),
        ),
        migrations.AddField(
            model_name='modification',
            name='modification_target',
            field=models.ForeignKey(blank=True, help_text='The targeted gene or genomic region that is targeted by the modification.', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='modTarget', to='wetLab.Target'),
        ),
    ]
